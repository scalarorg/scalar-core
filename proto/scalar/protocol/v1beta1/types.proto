syntax = "proto3";
package scalar.protocol.v1beta1;

import "gogoproto/gogo.proto";
import "scalar/protocol/exported/v1beta1/types.proto";
import "scalar/chains/v1beta1/types.proto";
import "scalar/covenant/v1beta1/types.proto";

option go_package = "github.com/scalarorg/scalar-core/x/protocol/types";

// DestinationChain represents a blockchain where tokens can be sent

message Protocol {
  bytes bitcoin_pubkey = 1; // BTC's pubkey
  bytes scalar_address = 2; // Scalar's address
  string name = 3;
  bytes tag = 4;
  scalar.protocol.exported.v1beta1.ProtocolAttributes attributes = 5;
  scalar.protocol.exported.v1beta1.Status status = 6;
  // scalar.covenant.v1beta1.CustodianGroup custodian_group = 8;
  string custodian_group_uid = 7
      [ (gogoproto.customname) = "CustodianGroupUID" ];
  scalar.chains.v1beta1.Asset asset = 8; // External asset
  repeated scalar.protocol.exported.v1beta1.SupportedChain chains =
      9;             // Other chains with internal asset
  bytes avatar = 10; // Avatar of the protocol, base64 encoded
}

message ProtocolDetails {
  bytes scalar_address = 1; // Scalar's address
  bytes bitcoin_pubkey = 2; // BTC's pubkey
  string name = 3;
  bytes tag = 4;
  scalar.protocol.exported.v1beta1.ProtocolAttributes attributes = 5;
  scalar.protocol.exported.v1beta1.Status status = 6;
  string custodian_group_uid = 7
      [ (gogoproto.customname) = "CustodianGroupUID" ];
  scalar.chains.v1beta1.Asset asset = 8; // External asset
  repeated scalar.protocol.exported.v1beta1.SupportedChain chains =
      9;             // Other chains with internal asset
  bytes avatar = 10; // Avatar of the protocol, base64 encoded
  scalar.covenant.v1beta1.CustodianGroup custodian_group = 11;
}