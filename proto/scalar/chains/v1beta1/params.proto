syntax = "proto3";
package scalar.chains.v1beta1;

import "gogoproto/gogo.proto";
import "scalar/utils/v1beta1/threshold.proto";

option go_package = "github.com/scalarorg/scalar-core/x/chains/types";

message Params {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName" ];
  uint64 confirmation_height = 2;
  uint32 network_kind = 3
      [ (gogoproto.casttype) =
            "github.com/scalarorg/bitcoin-vault/go-utils/types.NetworkKind" ];
  bytes token_code = 4;
  bytes burnable = 5;
  int64 revote_locking_period = 6;
  bytes chain_id = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.customname) = "ChainID"
  ];
  scalar.utils.v1beta1.Threshold voting_threshold = 8
      [ (gogoproto.nullable) = false ];
  int64 min_voter_count = 9;
  uint32 commands_gas_limit = 10;
  int64 voting_grace_period = 11;
  int64 end_blocker_limit = 12;
  uint64 transfer_limit = 13;
  map<string, string> metadata = 14;
}
